#ifndef __FFT_H__
#define __FFT_H__

typedef struct complex //复数类型
{
	f32 real;		//实部
	f32 imag;		//虚部
}complex;

///////////////////////////////////////////
void conjugate_complex(int n, complex in[], complex out[]);
void c_plus(complex a, complex b, complex *c);//复数加
void c_mul(complex a, complex b, complex *c);//复数乘
void c_sub(complex a, complex b, complex *c);	//复数减法
void c_div(complex a, complex b, complex *c);	//复数除法
void fft(int N, complex f[]);//傅立叶变换 输出也存在数组f中
void ifft(int N, complex f[]); // 傅里叶逆变换
void c_abs(complex f[], f32 out[], int n); //复数数组取模
////////////////////////////////////////////

#endif